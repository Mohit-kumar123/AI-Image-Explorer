name: Dockerized CI/CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.16.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Create .env file for Backend
        run: |
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> ./server/.env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> ./server/.env
          echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" >> ./server/.env
          echo "PORT=${{ secrets.PORT }}" >> ./server/.env
          echo "MONGODB_URL=${{ secrets.MONGODB_URL }}" >> ./server/.env
          echo "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" >> ./server/.env
          echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> ./server/.env
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> ./server/.env
          echo "STABILITY_API_KEY=${{ secrets.STABILITY_API_KEY }}" >> ./server/.env
          echo "COHERE_API_KEY=${{ secrets.COHERE_API_KEY }}" >> ./server/.env

      - name: Create .env file for Frontend
        run: |
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" >> ./client/.env

      - name: Build Backend Docker Image
        run: |
          docker buildx build \
            --build-arg GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
            --build-arg GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} \
            --build-arg SESSION_SECRET=${{ secrets.SESSION_SECRET }} \
            --build-arg PORT=${{ secrets.PORT }} \
            --build-arg MONGODB_URL=${{ secrets.MONGODB_URL }} \
            --build-arg CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }} \
            --build-arg CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }} \
            --build-arg CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }} \
            --build-arg STABILITY_API_KEY=${{ secrets.STABILITY_API_KEY }} \
            --build-arg COHERE_API_KEY=${{ secrets.COHERE_API_KEY }} \
            -t ${{ secrets.DOCKER_USERNAME }}/gyaani-backend:latest \
            --load \
            ./server

      - name: Push Backend Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/gyaani-backend:latest

      - name: Build Frontend Docker Image
        run: |
          docker buildx build \
            --build-arg VITE_API_URL=${{ secrets.VITE_API_URL }} \
            -t ${{ secrets.DOCKER_USERNAME }}/gyaani-frontend:latest \
            --load \
            ./client

      - name: Push Frontend Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/gyaani-frontend:latest
