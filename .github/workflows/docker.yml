name: Dockerized CI/CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and Push Backend Docker Image
      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./server
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/gyaani-backend:latest
          build-args: |
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            SESSION_SECRET=${{ secrets.SESSION_SECRET }}
            PORT=${{ secrets.PORT }}
            MONGODB_URL=${{ secrets.MONGODB_URL }}
            CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
            CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
            STABILITY_API_KEY=${{ secrets.STABILITY_API_KEY }}
            COHERE_API_KEY=${{ secrets.COHERE_API_KEY }}

      # Step 5: Build and Push Frontend Docker Image
      - name: Build and Push Frontend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./client
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/gyaani-frontend:latest
          build-args: |
            VITE_API_URL=${{ secrets.VITE_API_URL }}